database: {
	users: {
		idUser: string,
		idPusat: string,
		idCabang: string,
		name: string,
		email: string,
		phone: string,
		password: string,
		access: 
		{
			persediaan: boolean,
			penjualan: boolean,
			laporan: boolean,
			monitoring: boolean
		}
	},
	store: {
		idPusat: string,
		name: string,
		ket: string
		cabang: [
			{
				idCabang: string,
				name: string,
				ket: string'
			}
		]
	},
	ingredients: {
		idIngredients: string,
		barcode: string,
		name: string,
		cost: integer,
		price: integer,
		quantity: integer
	},
	inventory: {
		idCategory: string,
		idCabang: string,
		name: string,
		product: [
			{
				idProduct: string,
				barcode: string,
				name: string,
				cost: integer,
				price: integer,
				quantity: integer,
				subProduct: [
					{
						idSubProduct: string,
						barcode: string,
						name: string,
						cost: integer,
						price: integer,
						quantity: integer,
					}
				],
				ingredients: [
					{
						idIngredients: string,
						qty: integer
					}
				]
			}
		]
	}
}

registerPOST: {
	request: {
		store: {
			idPusat: string,
			name: string,
			ket: string
		},
		register: {
			idUser: string,
			idPusat: string,
			idCabang: string,
			name: string,
			email: string,
			phone: string,
			password: string,
			access: {
				persediaan: boolean,
				penjualan: boolean,
				laporan: boolean,
				monitoring: boolean
			}
		}
	},
	response: {
		statusCode: integer,
		message: string
	}
}

loginPOST: {
	request: {
		email: string,
		password: string
	},
	reponse: {
		statusCode: integer,
		message: string,
		token: string,
		data: {
			idUser: admin,
			idPusat: admin,
			idCabang: admin
			name: admin,
			email: adminadmin',
			phone: admin,
			access: {
				persediaan: boolean,
				penjualan: boolean,
				laporan: boolean,
				monitoring: boolean
			},
			cabangName: string,
			lastLogin: date
		}
	}
}

usersGET: {
	request: {
		token: string
	},
	response: {
		statusCode: integer,
		message: string,
		data: [
			{
				idUser: string,
				idPusat: string,
				idCabang: string,
				name: string,
				email: string,
				phone: string,
				access: {
					persediaan: boolean,
					penjualan: boolean,
					laporan: boolean,
					monitoring: boolean
				}
			}
		]
	}
}

storeGET: {
	request: {
		token: string
	},
	response: {
		statusCode: integer,
		message: string,
		data: [
			{
				idPusat: string,
				name: string,
				ket: string,
				cabang: [
					{
						idCabang: string,
						name: string,
						ket: string'
					}
				]
			}
		]
	}
}

ingredientsGET: {
	request: {
		token: string
	},
	response: {
		statusCode: integer,
		message: string,
		data: [
			{
				idIngredients: string,
				barcode: string,
				name: string,
				cost: integer,
				price: integer,
				quantity: integer
			}
		]
	}
}

inventoryGET: {
	request: {
		token: string
	},
	reponse: {
		statusCode: integer,
		message: string,
		data: [
			{
				idCategory: string,
				idCabang: string,
				name: string,
				product: [
					{
						idProduct: string,
						barcode: string,
						name: string,
						cost: integer,
						price: integer,
						quantity: integer,
						subProduct: [
							{
								idSubProduct: string,
								barcode: string,
								name: string,
								cost: integer,
								price: integer,
								quantity: integer,
							}
						],
						ingredients: [
							{
								idIngredients: string,
								qty: integer
							}
						]
					}
				]
			}
		]
	}
}

CreateCategoryPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
			idCabang: string,
			name: string,
		}
	},

	sample: {
		token: '12345678980abcdefghjklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
			idCabang: null,
			name: 'Makanan',
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success create category'
	}
}

UpdateCategoryPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
			name: string
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
			name: 'Makan'
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success update category'
	}
}

DeleteCategoryPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success delete category'
	}
}

createProductPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
			idProduct: string,
			barcode: string,
			name: string,
			cost: integer,
			price: integer,
			quantity: integer
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
			idProduct: '8ysVkq0EgnyVLrZho47U',
			barcode: null,
			name: 'nasi',
			cost: 0,
			price: 1000,
			quantity: 98,
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success create product'
	}
}

updateProductPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
			idProduct: string,
			barcode: string,
			name: string,
			cost: integer,
			price: integer,
			quantity: integer
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
			idProduct: '8ysVkq0EgnyVLrZho47U',
			barcode: null,
			name: 'nasi',
			cost: 0,
			price: 1000,
			quantity: 98,
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success update product'
	}
}

deleteProductPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
			idProduct: string
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
			idProduct: '8ysVkq0EgnyVLrZho47U'
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success delete product'
	}
}

createSubProductPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
			idProduct: string,
			idSubProduct: string,
			barcode: string,
			name: string,
			cost: integer,
			price: integer,
			quantity: integer
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
			idProduct: '8ysVkq0EgnyVLrZho47U',
			idSubProduct: 'VLrZho47U8ysVkq0Egny',
			barcode: null,
			name: 'bawang goreng',
			cost: 0,
			price: 1000,
			quantity: 98,
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success create sub product'
	}
}

updateSubProductPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
			idProduct: string,
			idSubProduct: string,
			barcode: string,
			name: string,
			cost: integer,
			price: integer,
			quantity: integer
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
			idProduct: '8ysVkq0EgnyVLrZho47U',
			idSubProduct: 'VLrZho47U8ysVkq0Egny',
			barcode: null,
			name: 'bawang goreng',
			cost: 0,
			price: 1000,
			quantity: 98,
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success update sub product'
	}
}

deleteSubProductPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
			idProduct: string,
			idSubProduct: string
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
			idProduct: '8ysVkq0EgnyVLrZho47U',
			idSubProduct: 'VLrZho47U8ysVkq0Egny'
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success delete sub product'
	}
}

createIngredientsPOST: {
	request: {
		token: string,
		data: {
			idIngredient: string,
			barcode: string,
			name: string,
			cost: integer,
			price: integer,
			quantity: integer
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idIngredient: '6WmZ91Oz5iBSRBi4J1s5',
			barcode: null,
			name: 'beras',
			cost: 0,
			price: 1000,
			quantity: 98,
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success create ingredients'
	}
}

updateIngredientsPOST: {
	request: {
		token: string,
		data: {
			idIngredient: string,
			barcode: string,
			name: string,
			cost: integer,
			price: integer,
			quantity: integer
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idIngredient: '6WmZ91Oz5iBSRBi4J1s5',
			barcode: null,
			name: 'beras',
			cost: 0,
			price: 1000,
			quantity: 98,
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success update ingredients'
	}
}

deleteIngredientsPOST: {
	request: {
		token: string,
		data: {
			idIngredient: string,
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idIngredient: '6WmZ91Oz5iBSRBi4J1s5',
		}
	},

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success delete ingredients'
	}
}

addBahanBakuPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
			idProduct: string,
			ingredients: {
				idIngredient: string,
				qty: integer
			}
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
			idProduct: '8ysVkq0EgnyVLrZho47U',
			ingredients: {
				idIngredient: '6WmZ91Oz5iBSRBi4J1s5',
				qty: 2
			}
		}
	}

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success add ingredients'
	}
}

removeBahanBakuPOST: {
	request: {
		token: string,
		data: {
			idCategory: string,
			idProduct: string,
			idIngredient: string,
		}
	},

	sample: {
		token: '1234567890abcdefghijklmnopqrstuvwxyz',
		data: {
			idCategory: 'SRBi4J1s56WmZ91Oz5iB',
			idProduct: '8ysVkq0EgnyVLrZho47U',
			idIngredient: '6WmZ91Oz5iBSRBi4J1s5',
		}
	}

	response: {
		statusCode: integer,
		message: string
	},

	sample: {
		statusCode: 200,
		message: 'success remove ingredients'
	}
}